name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "develop" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }} # TODO: update Google Cloud project id
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }} # TODO: update Artifact Registry locations
  REPOSITORY: ${{ secrets.REPOSITORY }} # TODO: update Artifact Registry repository name
  SERVICE: ${{ secrets.SERVICE }} # TODO: update Cloud Run service name
  REGION: ${{ secrets.REGION }} # TODO: update Cloud Run service region

jobs:
  deploy:

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      
      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build --no-cache -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            BUCKET_NAME=${{ secrets.BUCKET_NAME }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}
            ANALYSIS_SERVICE_URL=${{ secrets.ANALYSIS_SERVICE_URL }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PROVIDER=${{ secrets.DB_PROVIDER }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            URL_CLIENT=${{ secrets.URL_CLIENT }}
            URL_CLIENT_REGEX=${{ secrets.URL_CLIENT_REGEX }}
          flags: '--allow-unauthenticated --vpc-connector=${{ secrets.VPC_CONNECTOR }}'
        continue-on-error: true 

      - name: Check on failures
        if: steps.deploy.outcome != 'success'
        run: exit 1

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
